(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    296252,       5622]
NotebookOptionsPosition[    294839,       5576]
NotebookOutlinePosition[    295175,       5591]
CellTagsIndexPosition[    295132,       5588]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"alpha1", "=", "0.5"}], ",", " ", 
     RowBox[{"alpha2", "=", "1"}], ",", " ", 
     RowBox[{"alpha3", "=", "1.5"}]}], "}"}], ",", 
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox["alpha1", "2"], "*", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "p", "]"}], "2"]}]}], "]"}]}], ",", 
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", " ", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox["alpha2", "2"], "*", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "p", "]"}], "2"]}]}], "]"}]}], ",", 
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox["alpha3", "2"], "*", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "p", "]"}], "2"]}]}], "]"}]}]}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", "Pi"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<|G/\!\(\*SubscriptBox[\(G\), \(e\)]\)|\>\"", ",", " ", "Black", 
         ",", "Medium"}], "]"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Alpha]=0.5\>\"", ",", "\"\<\[Alpha]=1\>\"", ",", 
        "\"\<\[Alpha]=1.5\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", " ", 
       RowBox[{
       "\"\<Wave eq (BTCS) : Amplification Factor\>\"", ",", " ", "Black", 
        ",", " ", "Medium"}], "]"}]}], ",", " ", 
     RowBox[{"PolarGridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"Pi", "/", "2"}], ",", "Pi", ",", 
          RowBox[{"3", " ", 
           RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.25", ",", "0.5", ",", "0.75", ",", "1"}], "}"}]}], 
       "}"}]}], ",", 
     RowBox[{"PolarTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Radians\>\"", ",", " ", "Automatic"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.823914061768578*^9, 3.823914090091316*^9}, {
   3.8239141651916523`*^9, 3.823914185468224*^9}, {3.823914604083207*^9, 
   3.8239146162531567`*^9}, {3.823914741192339*^9, 3.8239147821122828`*^9}, {
   3.823915503867804*^9, 3.823915513274495*^9}, {3.823915547146153*^9, 
   3.823915548711164*^9}, {3.823915579212534*^9, 3.8239156236612177`*^9}, {
   3.823915673157049*^9, 3.823915674684458*^9}, {3.823917117778811*^9, 
   3.823917151513163*^9}, {3.823917225027628*^9, 3.823917225336062*^9}, {
   3.8239174718791323`*^9, 3.823917565612659*^9}, {3.8239264751123657`*^9, 
   3.823926557805464*^9}, {3.823926587940219*^9, 3.823926660021039*^9}, {
   3.823926718617565*^9, 3.823926793775769*^9}, {3.823926868942319*^9, 
   3.8239269058221207`*^9}, {3.823926969423854*^9, 3.82392698326823*^9}, {
   3.823927148262981*^9, 3.823927169182822*^9}, {3.82392764894761*^9, 
   3.823927667340343*^9}, 3.823929097470565*^9, {3.823929179131116*^9, 
   3.823929180471303*^9}, {3.823929295189055*^9, 3.8239293654852657`*^9}, {
   3.823933342828188*^9, 3.823933423080315*^9}, {3.823998417729813*^9, 
   3.823998441787652*^9}, {3.823998617370812*^9, 3.823998645353395*^9}, 
   3.8240145798012953`*^9, {3.824017843562757*^9, 3.824017843966161*^9}, {
   3.824018331059745*^9, 3.824018333456758*^9}, {3.824018644567692*^9, 
   3.824018651579475*^9}, {3.824019150316506*^9, 3.8240192243119593`*^9}, {
   3.8240436919328117`*^9, 3.8240436977229767`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        LineBox[{{0, 0}, {1.3416407725629296`, 0.}}]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        LineBox[{{0, 0}, {0., 1.3416407725629296`}}]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        LineBox[{{0, 0}, {-1.3416407725629296`, 0.}}]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        LineBox[{{0, 0}, {0., -1.3416407725629296`}}]}}, {{
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 0.25, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 0.5, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 0.75, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 1, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}}}, {}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
mAJmEst6eUV09CNUbN9FPgrcP+be6VVGR4dZXp93/dUBTdK2JFs9HS1xZSse
fNwBbQNefsV9dHTFYz5yIfgT6PyNumz9l4627q4+p1TQBjnfbX6ELNMRy01H
E7OwNvDw+HmzdJWOxHjIeFfnNrio4Je7to5EnVdOv0g91QaVq5zD99hIdDz/
k2t/XSscoBkfIXaRKMUwel1xdwssbTyxU/oUieL9pOzv/WiCtyOhAWfPkKjM
PLYqldIEVVzHdS4CibxELvD15zTBrWEDpisKJCIJjsVjd7GXFWJAlUR7Lvyg
1Mx+hPut4VYJ+iTqPZghZ/C9Efw7PeKMnUmknrCT+1lXPZAZ6g3cj0i0kdt0
7GZePXBFqZxudCGRxptlCfmX9ZDcd5FX0J1EMQ2etlS1emDT2Wlf8ZREW2qF
U0Wb6+CPm5K17SsSnbY39TmOaiFRgmtrYzqJ3seNnIjMqIbtzeW87Jkkus8z
uWQZUA01XocqNN+RSORbHePJO9VAZt0e684m0YbG4RHKoWq4FucaVp5PotcO
m2y/mCDg87hgur2CRAwFYoKFdyph0+dWGdlKErlenaPsO1wJ+1aMM3SqSLQr
4e3tAHoF+Dk3Gz6vJlFQ5Her6/fwPvD4+9WhehI5nM13rncqB+/TBxlY2kmk
88bRdqdnKUTlyNxl+ESiwYU9JbrnS+FzK+uDP9ge9qLXXzOVAm3umNIohUS3
NNKimXxLQOaiw1pYD4n2CV7ZURfwAYwag+MCh0h0sXIusTW0CHS82B1MvpDo
SGo439j1Ilg66zZ0bJhEtQM7VRa3FYGQsZ9N21cSOX4+85svshAM7i56TY6S
aLImVvZcbAHoPHxhkjZFIiNfUvh4Sh5of1Syuj2N48cfc6XTKA8EGeJsDsyQ
6Ldo0kE7vjzgGrc0iZzFz2PX6M6UgFyQSwie06ORaCFksH5q9D0UnleoXUcn
Udfz89Lrtd6DkKlEUDr2U0WxBP6mbOA1Ft5AJUmU2rqapPg+CzT+sceq/iTR
8Ayrk4VLJvDQtA9+we6+H5ZtTssAyTOZeVa/SPRuZuae6Y0MiF4/8cZ1nkTb
VLKp6krpIKqwgcd1kURKN27kMHGlgQzDss4vbPuqId2Zp6mg+Pr3K8vfJOJ/
2CXU9jsFKsVDp1T+kIjVUtTOfzgZHK7e4J1eIhH7yOPB8fQk6Pr0ivXiXxLN
ZHSmFO1KgkrLP7QU7AilHJGnLxKBt2djtNY/EmXSVC9ITcfDvgU/kwzsL3eS
3Bva44Cje2LHX2ymHZrVmgWxwPN2xiZkmURbs3fNGbtHQxvdev0gdneAldjI
zSioDXcP4V8hkckNZwZjlUj4Ru4IiMfuL1Dlv8ITDkWLnvOfsflcrubWL70G
9Y1nrnGtkkg7JcpJ+lsotF9wpD3CvqL3SJor8xXINQ+IZmA7HTFydQt+Cf5b
DXV7sftzjvI2z7yATPF511Xs1exk3rDCIPCeDg8VWiPRXTMrBaMnAfBzSC5B
GTugrHdK4JIfdOv0x9/GXjMBje88vsBrfyvkKXZu+Gp90jdvKFoafBSPnbjN
9rVRpic0BkhqFWEXoFbOI7Pu4OpyR6gZO+d8wFDsExcQHXWZ+ozdxUfZvWGb
E1yONI6fwj50Q8/GPvMe+Mpxq/zEZtH9WJP1xBqyBcOnlrClrQz2O2aaQoP9
xKNV7A6dLxpOmZr/9z/eHGI15JEQTks6/T86Waf4
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
9qcny/0PDhSRxw==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
fh07glF5+XHm9f/7H28O0emwHRNMTZD7H1/qon8=
         
         "]]}}}, {}, {{{}, {}, {}, {}}, {}}}, {
    PlotRange -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     PlotRangePadding -> Scaled[0.02], DisplayFunction -> Identity, Axes -> 
     True, AxesLabel -> {
       FormBox[
        StyleBox["\"|G/\\!\\(\\*SubscriptBox[\\(G\\), \\(e\\)]\\)|\"", 
         GrayLevel[0], Medium, StripOnInput -> False], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
         Mod[
          ArcTan[
           Part[#, 1], 
           Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
         Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
         Mod[
          ArcTan[
           Part[#, 1], 
           Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05]}, PlotLabel -> FormBox[
       StyleBox["\"Wave eq (BTCS) : Amplification Factor\"", 
        GrayLevel[0], Medium, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-1., 1.}, {0., 0.8944271700944995}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Alpha]=0.5\"", "\"\[Alpha]=1\"", "\"\[Alpha]=1.5\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.823929368347621*^9, 3.823931571972989*^9, 3.823931712557716*^9, {
   3.823933196142889*^9, 3.823933216833023*^9}, {3.823933354048205*^9, 
   3.823933411071951*^9}, 3.8239950749212914`*^9, 3.8239976684530687`*^9, 
   3.823997711813899*^9, {3.823997879643642*^9, 3.82399789172113*^9}, 
   3.82399795327634*^9, 3.823998222358539*^9, 3.823998561362465*^9, {
   3.823998630962304*^9, 3.823998654606028*^9}, 3.82401458456422*^9, 
   3.824017061791782*^9, 3.824017847026784*^9, 3.824018340162006*^9, 
   3.824018653777025*^9, 3.824019155316744*^9, {3.824019188373599*^9, 
   3.824019226340436*^9}, 3.824019302009232*^9, 3.824043700621685*^9, 
   3.8240943267491083`*^9}]
}, Open  ]],

Cell[BoxData["\n"], "Input",
 CellChangeTimes->{{3.823915395568234*^9, 3.823915445452937*^9}, 
   3.823915495303503*^9, {3.823917417668828*^9, 3.8239174205887938`*^9}, {
   3.823917540840714*^9, 3.823917553605454*^9}, {3.823928478276945*^9, 
   3.8239284800924673`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nu1", "=", "0.5"}], ",", " ", 
     RowBox[{"nu2", "=", "1"}], ",", " ", 
     RowBox[{"nu3", "=", "1.5"}]}], "}"}], ",", 
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ArcTan", "[", 
         RowBox[{
          RowBox[{"-", "nu1"}], "*", 
          RowBox[{"Sin", "[", "th", "]"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "nu1"}], "*", "th"}], ")"}]}], ",", " ", 
       RowBox[{
        RowBox[{"ArcTan", "[", 
         RowBox[{
          RowBox[{"-", "nu2"}], "*", 
          RowBox[{"Sin", "[", "th", "]"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "nu2"}], "*", "th"}], ")"}]}], ",", " ", 
       RowBox[{
        RowBox[{"ArcTan", "[", 
         RowBox[{
          RowBox[{"-", "nu3"}], "*", 
          RowBox[{"Sin", "[", "th", "]"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "nu3"}], "*", "th"}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"th", ",", " ", "0", ",", " ", "Pi"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\[Phi]/\!\(\*SubscriptBox[\(\[Phi]\), \(e\)]\)\>\"", ",", 
         "Black", ",", " ", "Medium"}], "]"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Alpha]=0.5\>\"", ",", "\"\<\[Alpha]=1\>\"", ",", 
        "\"\<\[Alpha]=1.5\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Wave eq (BTCS) : Relative Phase Shift error\>\"", ",", " ", 
        "Black", ",", " ", "Medium"}], "]"}]}], ",", " ", 
     RowBox[{"PolarTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"Pi", "/", "4"}], ",", 
          RowBox[{"Pi", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"3", " ", "Pi"}], ")"}], "/", "4"}], ",", "Pi", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"5", " ", "Pi"}], ")"}], "/", "4"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"3", " ", "Pi"}], ")"}], "/", "2"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"7", " ", "Pi"}], ")"}], "/", "4"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", ".2", ",", ".4", ",", ".6", ",", ".8", ",", "1"}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"PolarGridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"Pi", "/", "2"}], ",", "Pi", ",", 
          RowBox[{"3", " ", 
           RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.25", ",", "0.5", ",", "0.75", ",", "1"}], "}"}]}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.823915489516012*^9, 3.8239154895343533`*^9}, {
   3.823928483122056*^9, 3.823928635955907*^9}, {3.823928685435865*^9, 
   3.823928778514921*^9}, {3.8239288479284773`*^9, 3.823928852382306*^9}, {
   3.823928910212969*^9, 3.8239289941519213`*^9}, {3.823929025857191*^9, 
   3.823929276787978*^9}, {3.8239293549415007`*^9, 3.823929356956745*^9}, {
   3.823931036341753*^9, 3.8239310718453083`*^9}, {3.823931557529799*^9, 
   3.823931583553319*^9}, {3.82393161388161*^9, 3.823931705977208*^9}, {
   3.8239331840207253`*^9, 3.823933214288907*^9}, {3.823933428542688*^9, 
   3.823933429138342*^9}, {3.823997501996153*^9, 3.823997523367856*^9}, {
   3.823997841868375*^9, 3.823997888723394*^9}, {3.8239984341389923`*^9, 
   3.8239984369442053`*^9}, {3.823998607719348*^9, 3.82399864293099*^9}, {
   3.824000614480317*^9, 3.8240006248746767`*^9}, {3.8240145762922087`*^9, 
   3.824014577943439*^9}, {3.824017831689748*^9, 3.824017832369816*^9}, 
   3.8240192853171597`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,4,1,30536372774484139750,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.823928917383581*^9, {3.823928951523397*^9, 3.8239289588273087`*^9}, 
   3.8239289966853228`*^9, {3.823929050723851*^9, 3.8239290581556664`*^9}, {
   3.823929117771084*^9, 3.823929175040634*^9}, {3.823929245277102*^9, 
   3.8239292780291967`*^9}, {3.8239293598542137`*^9, 3.823929368398019*^9}, 
   3.823931572340241*^9, 3.823931655306229*^9, 3.823931712929981*^9, {
   3.823933196214074*^9, 3.823933216913437*^9}, {3.823933354102441*^9, 
   3.8239334111314096`*^9}, 3.82393345391546*^9, 3.823995075097538*^9, 
   3.823997668551593*^9, 3.823997711899497*^9, {3.8239978797200727`*^9, 
   3.823997891796102*^9}, 3.8239979533546753`*^9, 3.8239982224339542`*^9, 
   3.8239985614304934`*^9, {3.823998631021731*^9, 3.82399865466566*^9}, {
   3.824000617318716*^9, 3.824000627727912*^9}, 3.8240145846313763`*^9, 
   3.824017062019854*^9, 3.82401783580072*^9, 3.824019302084014*^9, 
   3.82409432683566*^9}],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"",2,4,2,30536372774484139750,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.823928917383581*^9, {3.823928951523397*^9, 3.8239289588273087`*^9}, 
   3.8239289966853228`*^9, {3.823929050723851*^9, 3.8239290581556664`*^9}, {
   3.823929117771084*^9, 3.823929175040634*^9}, {3.823929245277102*^9, 
   3.8239292780291967`*^9}, {3.8239293598542137`*^9, 3.823929368398019*^9}, 
   3.823931572340241*^9, 3.823931655306229*^9, 3.823931712929981*^9, {
   3.823933196214074*^9, 3.823933216913437*^9}, {3.823933354102441*^9, 
   3.8239334111314096`*^9}, 3.82393345391546*^9, 3.823995075097538*^9, 
   3.823997668551593*^9, 3.823997711899497*^9, {3.8239978797200727`*^9, 
   3.823997891796102*^9}, 3.8239979533546753`*^9, 3.8239982224339542`*^9, 
   3.8239985614304934`*^9, {3.823998631021731*^9, 3.82399865466566*^9}, {
   3.824000617318716*^9, 3.824000627727912*^9}, 3.8240145846313763`*^9, 
   3.824017062019854*^9, 3.82401783580072*^9, 3.824019302084014*^9, 
   3.8240943268563547`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,4,3,30536372774484139750,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.823928917383581*^9, {3.823928951523397*^9, 3.8239289588273087`*^9}, 
   3.8239289966853228`*^9, {3.823929050723851*^9, 3.8239290581556664`*^9}, {
   3.823929117771084*^9, 3.823929175040634*^9}, {3.823929245277102*^9, 
   3.8239292780291967`*^9}, {3.8239293598542137`*^9, 3.823929368398019*^9}, 
   3.823931572340241*^9, 3.823931655306229*^9, 3.823931712929981*^9, {
   3.823933196214074*^9, 3.823933216913437*^9}, {3.823933354102441*^9, 
   3.8239334111314096`*^9}, 3.82393345391546*^9, 3.823995075097538*^9, 
   3.823997668551593*^9, 3.823997711899497*^9, {3.8239978797200727`*^9, 
   3.823997891796102*^9}, 3.8239979533546753`*^9, 3.8239982224339542`*^9, 
   3.8239985614304934`*^9, {3.823998631021731*^9, 3.82399865466566*^9}, {
   3.824000617318716*^9, 3.824000627727912*^9}, 3.8240145846313763`*^9, 
   3.824017062019854*^9, 3.82401783580072*^9, 3.824019302084014*^9, 
   3.824094326863195*^9}],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"",2,4,4,30536372774484139750,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.823928917383581*^9, {3.823928951523397*^9, 3.8239289588273087`*^9}, 
   3.8239289966853228`*^9, {3.823929050723851*^9, 3.8239290581556664`*^9}, {
   3.823929117771084*^9, 3.823929175040634*^9}, {3.823929245277102*^9, 
   3.8239292780291967`*^9}, {3.8239293598542137`*^9, 3.823929368398019*^9}, 
   3.823931572340241*^9, 3.823931655306229*^9, 3.823931712929981*^9, {
   3.823933196214074*^9, 3.823933216913437*^9}, {3.823933354102441*^9, 
   3.8239334111314096`*^9}, 3.82393345391546*^9, 3.823995075097538*^9, 
   3.823997668551593*^9, 3.823997711899497*^9, {3.8239978797200727`*^9, 
   3.823997891796102*^9}, 3.8239979533546753`*^9, 3.8239982224339542`*^9, 
   3.8239985614304934`*^9, {3.823998631021731*^9, 3.82399865466566*^9}, {
   3.824000617318716*^9, 3.824000627727912*^9}, 3.8240145846313763`*^9, 
   3.824017062019854*^9, 3.82401783580072*^9, 3.824019302084014*^9, 
   3.824094326870412*^9}],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,4,5,30536372774484139750,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.823928917383581*^9, {3.823928951523397*^9, 3.8239289588273087`*^9}, 
   3.8239289966853228`*^9, {3.823929050723851*^9, 3.8239290581556664`*^9}, {
   3.823929117771084*^9, 3.823929175040634*^9}, {3.823929245277102*^9, 
   3.8239292780291967`*^9}, {3.8239293598542137`*^9, 3.823929368398019*^9}, 
   3.823931572340241*^9, 3.823931655306229*^9, 3.823931712929981*^9, {
   3.823933196214074*^9, 3.823933216913437*^9}, {3.823933354102441*^9, 
   3.8239334111314096`*^9}, 3.82393345391546*^9, 3.823995075097538*^9, 
   3.823997668551593*^9, 3.823997711899497*^9, {3.8239978797200727`*^9, 
   3.823997891796102*^9}, 3.8239979533546753`*^9, 3.8239982224339542`*^9, 
   3.8239985614304934`*^9, {3.823998631021731*^9, 3.82399865466566*^9}, {
   3.824000617318716*^9, 3.824000627727912*^9}, 3.8240145846313763`*^9, 
   3.824017062019854*^9, 3.82401783580072*^9, 3.824019302084014*^9, 
   3.824094326875692*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,4,6,30536372774484139750,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.823928917383581*^9, {3.823928951523397*^9, 3.8239289588273087`*^9}, 
   3.8239289966853228`*^9, {3.823929050723851*^9, 3.8239290581556664`*^9}, {
   3.823929117771084*^9, 3.823929175040634*^9}, {3.823929245277102*^9, 
   3.8239292780291967`*^9}, {3.8239293598542137`*^9, 3.823929368398019*^9}, 
   3.823931572340241*^9, 3.823931655306229*^9, 3.823931712929981*^9, {
   3.823933196214074*^9, 3.823933216913437*^9}, {3.823933354102441*^9, 
   3.8239334111314096`*^9}, 3.82393345391546*^9, 3.823995075097538*^9, 
   3.823997668551593*^9, 3.823997711899497*^9, {3.8239978797200727`*^9, 
   3.823997891796102*^9}, 3.8239979533546753`*^9, 3.8239982224339542`*^9, 
   3.8239985614304934`*^9, {3.823998631021731*^9, 3.82399865466566*^9}, {
   3.824000617318716*^9, 3.824000627727912*^9}, 3.8240145846313763`*^9, 
   3.824017062019854*^9, 3.82401783580072*^9, 3.824019302084014*^9, 
   3.824094326944153*^9}],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"",2,4,8,30536372774484139750,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.823928917383581*^9, {3.823928951523397*^9, 3.8239289588273087`*^9}, 
   3.8239289966853228`*^9, {3.823929050723851*^9, 3.8239290581556664`*^9}, {
   3.823929117771084*^9, 3.823929175040634*^9}, {3.823929245277102*^9, 
   3.8239292780291967`*^9}, {3.8239293598542137`*^9, 3.823929368398019*^9}, 
   3.823931572340241*^9, 3.823931655306229*^9, 3.823931712929981*^9, {
   3.823933196214074*^9, 3.823933216913437*^9}, {3.823933354102441*^9, 
   3.8239334111314096`*^9}, 3.82393345391546*^9, 3.823995075097538*^9, 
   3.823997668551593*^9, 3.823997711899497*^9, {3.8239978797200727`*^9, 
   3.823997891796102*^9}, 3.8239979533546753`*^9, 3.8239982224339542`*^9, 
   3.8239985614304934`*^9, {3.823998631021731*^9, 3.82399865466566*^9}, {
   3.824000617318716*^9, 3.824000627727912*^9}, 3.8240145846313763`*^9, 
   3.824017062019854*^9, 3.82401783580072*^9, 3.824019302084014*^9, 
   3.82409432694956*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \
\\\"::\\\", \\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,4,9,30536372774484139750,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.823928917383581*^9, {3.823928951523397*^9, 3.8239289588273087`*^9}, 
   3.8239289966853228`*^9, {3.823929050723851*^9, 3.8239290581556664`*^9}, {
   3.823929117771084*^9, 3.823929175040634*^9}, {3.823929245277102*^9, 
   3.8239292780291967`*^9}, {3.8239293598542137`*^9, 3.823929368398019*^9}, 
   3.823931572340241*^9, 3.823931655306229*^9, 3.823931712929981*^9, {
   3.823933196214074*^9, 3.823933216913437*^9}, {3.823933354102441*^9, 
   3.8239334111314096`*^9}, 3.82393345391546*^9, 3.823995075097538*^9, 
   3.823997668551593*^9, 3.823997711899497*^9, {3.8239978797200727`*^9, 
   3.823997891796102*^9}, 3.8239979533546753`*^9, 3.8239982224339542`*^9, 
   3.8239985614304934`*^9, {3.823998631021731*^9, 3.82399865466566*^9}, {
   3.824000617318716*^9, 3.824000627727912*^9}, 3.8240145846313763`*^9, 
   3.824017062019854*^9, 3.82401783580072*^9, 3.824019302084014*^9, 
   3.824094326971575*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        LineBox[{{0, 0}, {1.20919172931283, 0.}}]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        LineBox[{{0, 0}, {0., 1.20919172931283}}]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        LineBox[{{0, 0}, {-1.20919172931283, 0.}}]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        LineBox[{{0, 0}, {0., -1.20919172931283}}]}}, {{
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 0.25, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 0.5, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 0.75, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 1, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}}}, {}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwV2Hc8Vf8fB3BbSKlIJZEkkVH2fGeUkUJklAjpm4qM7CJli+wS2Ssre0Uf
+7rXuvYeFxchl5QQ9Tu/f3g8H/jcc87n836d99tpq6c3bWioqKiGsS///77Y
yPbv3z8KiLtzOrCpMgFthHjIX8yXnWpQdJQuOEY3Cu5g3gzYZxoZZQHP6CrH
fmBmv/+QZqngP6DzO5i+iDlLRu1rYNRTGDXt8h7DLHHEwijiizN4PNu0b8cs
d1S1c6TADfhtQ52rMN/lOZ3Lk+IFc86Rb9IwMwwbGFhG+YCvG2tNMOYXmfGc
uo2+4L9Ht2uH2ZGFtffRl9cgJO19Uxezod6lN6/L/OHplk+dCOb96bLb7wsC
4U/DISUmzIc09Tpys4JBvFKhh/SXAl9LcquqkkPB+LeXTAjm1XM/P+Ei34Ju
RybTbcznnLOY77dEwLfp8DUBzIo05qWkhkiooe/crdyjQKWqZXN/TTSU98vz
Pcec47s4pVUZA8334s2UMDfy/+j/UhoLWrcs2Sp3KRD85UBJbP47sC9aDH6K
2fq1zfW9nPewU5B47CzmBYdWQcvMeKBO7HQJ/IPd/3sFBu6kBIjf1Ll4focC
RD9dIcu3ybAdImpE2KbAP+JZ7b4rKbD6pS/iIebunm7/jaYUiGip10jcogDF
L1j9Qn0qdPsVfZ3epEDztAPueVU6LPhIxTzC/EkkKz5YOgNSY5Vfrv+iwB2w
Mo0uywCaJK3EzZ8UmFZaNfxYlAkpUhYLEz8okJ7JejY4JxsqI04+08PsJiWk
4yWQA2EUjWP16xR42L+Is83IgZgfttlxaxSgqqM4KKR8gvz6wDneVQpcLZ5x
+vwuDy5QF2x/WqTA9dL8ILz/ZwjPNuGeXKAA7+goOz1jEcTTZA8fwFx35mow
37UioPmPnvMBmQLvbtoUGPYVgbnZ96plEgXIT45ExMwWg1ypU4vBKAWcHV6J
uNOWQaplorf+CAX449UO22iUQaKBVN+1YWx9vjbTG6FlQPWtVVd6kAL6lH/T
HEfKwfEsZ9JMDwWEJWt83Pgq4JvBl+73bdjzCf3s43m5Cp4caLC8h6NAg4D7
2jm/Kng+MBPN30qBeA41uh5cFTSebh5Ja8I+n+YcmUO3GpbkL/5y/UqB8BE3
Zdu7NZBIe7byRSkFenkDFoQ9auHrp+nfjAkU2PHM5/rPqB62xiQEX8ZTIEUy
ZK3UpR5qtisdf72jwK28Vbm/MfXgnFepPxRDAXlDdc7QvnpAVh667uEUGB3g
dvPXawDFRKVoMV/s+paUsra0GuFrhO+8y30KcPea4irlm0HgXNqvSCsK7Hso
xZBr2gzWlGtCefcocJjIfibevRk48ij0A2YUGDDUnbOraIYp9pAohlsUuF/+
l2b9YgssSCRYk9QpgO9kzzYVbAVe3I3jHnwUGFqxc4w53AZnVitpr/JiedFk
c/2leBvk1YAy2ynsPFOm4x/eaAOZxPDMxOMUCEm1dRYNaQOLLW/tWDYKnJlW
LAmnxsOn20dvM/xdhT8yFoUfKXjwYoSDy4OrcPFelclwWzsou6evW/WvQmFS
Dp/2fDuUyqhJDvesgnFOxFAlbQd4bN4er+lYhZ+b8+sByh3Aepodd69xFdp9
tV03SjsgBcX7ihWsgoUirRhNUidIpbg8H3+5Cm+Xky6M2neDx7npB00vVgF/
0NVeMrwb1tUU9bI9V0F0eVk7uKAbaByG+R48wz6/NA3xrXQDT43YBPpvFUy3
ORlCJIkwQLVpOHd9FXTbx5Z/FRFhLf3+wibnKtBvP1vIyu4Bv0Otho7p32HE
q/TaQmgfNJvn9kwlf4coeY3ygfg+iNAMnbqW+B22VBwuN2T3waSQUvHJ2O/A
ffhi2dumPlj7rauSGvAdQhVsJpn+9AHFlLpO2vY7sARx5Tja9oPHUznv9xe+
g4VrVySN+gC4NOtpW+evwO1Bm/Q2yiCkdekyzGavQO0ezwuWv4OQgJPmu5e+
Avgr6a7a+4fAQora++aHFSAZDtTXCg4B/4NXs5xBK3BHZcrdyXIIsvf5GQtY
r8BnFtdS3t4hUE7e8TPlXAEWNR0Xz6Jh+FIvd9fYfRkMPLJfVt0bhegF/SJd
52XgfDADFXaj4EAbUX/FfhlYHNS6PnuOgjD74knh+8uQwvtTPy5mFG7l/J0d
1V0Gx3NfcOJtoxCa6pXRLbAMaQ7aDB9Ex8D1dm4TR98S3HzyZ+zS1hgc6w2m
Mzy7BIoj/9kIeU8Ax31NBX7eJfj19pGJWvAEhNz9UP3jxBIgXoKBScwEiKo1
RoSwLUElh6mFa+4E9BkXNmX++Qbjmrt5rwYnQDJmgC205xtIz6eLj4lMgoh3
2Cbn829QHx/d5DcyCRfvD7Q5dCzCZxk7etXD06A/3FJq2boItJsfblZxToNR
0F2SXv0iWNsjgQvc01Ao+JxJqGwRvox2WO4XnIbFs7pFuIRF6J4A9s9K07C3
ZPO0+NEiDJgNbD5/OA0TqtMOGoyL8Jh+UVqmdhpeVtblNCksQPKWwRiLGQn2
FU5SaqUWwK5W/ED4PRL8Cs3bKhNbAMboY1QHbEhAzWtpkHpmAeTbenkY7Umw
9GNO6zHLAvB2vrk66UOCAu1E3pbReZCOf07hSSdBcApL8jv3eTistVqzukAC
snDq2fUiMnD9DjiW/2gG2PfR5jbmkmHT5/i5IPsZiDqoqxCdQYZ1I6pdS6cZ
+JbsFXTxPRma7di3DnjOwBTT3wUrHzL8efdU8kbwDJhryUTFXyfDWN/h95bZ
M3D8M9OVu9/m4BS1wfooaQaGynQ8nU/NQfCqoB2b3iwwGLzN8eOcA80jPe8z
DGahkPKIKpZtDmYXj5yUNp4FJpXai6U0c1C3QX1e33wW9jpsa8nzs/CYDWf6
35NZoEuI9eb/PAv7j3+jYQ+ahRb7Y+yHYBby9axX7epmgZ5XGcckOwtvBfbm
8utn4YbjJQL1xVnwl14X/9aEfX6bWjOFbxaWRRrbTAmzkCgvlNvEMAusJSd+
nxiaBYkfAVd0umZAYP+sJvfaLEzb9f1aNJuBg1wF+ad55wAZqedoGM0Aj8JH
1xG+OZi/uUnK1J2BV7L/voefnYMdGfLqPdUZUBm5QP4hNAcVA2bBPedm4LJh
968kqTm45FcY/fEHCRa972cFas/Bh54L4QuBJDDj4A1OcJoDCYuOHVlfErBy
tR5icpmDl58y9od4kqDR9oLWM7c5mHIpOyNsR4LLIl7Nas/n4MstBTnbmyS4
mLC32uo/Bw2ZFcSBkyQ4OP7ujPn7OWD6HMvjVjwNX1l/JxK/zEHn1cOhornT
MBfbS833dQ6KJj0KyWnTEFpHKHKon4OAJzmnDWKm4TNTwnf6ljlwjiGMCLlN
w/6EhPmDXXNQa5UQ1aWInXv3mM3UKex69ntem3w7Bc3Upp8QFRkO/KkMA98p
+D7B/rGGhgyytoSgFKcpmOM+Ol1CRwZJ5icllremQGU51zBhHxmWjHwPk05M
gYu53941NjLsj736ZyBzEo5xhXle4CGDaZ3wv+wvE3BrxTNxWZ4MWaY0kloF
E6DjvS4erEiG7Ibsh0tJE/BmTkmSX5kMrRIZIxdeTcD9BJWgmypk6F2+wF6i
OQH1po+fRGiQQSZeqAoNjMN++Yu3Iw3IIIpjIFnixuGfG98W/S0yqL8PE6Kr
Hoecyup97kZksKmuP6eVOA72P0dfGZqSoWc3m3bAahxk7KlnVs3J4D8pzLhJ
GYPUZqL/J1syBKoeFE0gjYHh4Z9Pfj3C6kRsO/Zy3xi8MP9GUH5Chukpsvib
ijHolLJcwdtj63kKtQu8GIOiI4qdDc5koPVf033MPAbxLxyuyL4gw1oe3hnO
jgK3vcgx1XAyLPCPPFzgHAXVQw2hF96SIZHpeudb5lG4SxjoZY/ArqepYIlE
GQHBwsDxyUgySFy/kR5aMwLyckA2iSVDvE7so03dEWiVMWUgJ5ChVOvXoSzV
EXhScqInP5EMVwerVYykRqCEL9zZ6SMZNEPSLledGAFD3+TLv5PIcP603MIr
8jDkNjLRLqSSYWLkjrik1zAIcBc+sMgmg4sWI+d3u2HYz+PaSZeD3U/f56Ss
e8Pg03KXLQdz8AG2d1xXh2Em9LPw4icyxFz4aMR6aBiq0qzqb+STQehG89N2
2mHwIAqzzWJWjGGVDtkcghu5lsouBWSQVz9EZBofgqfSyjLRhWTg4T50/1D2
EOQc30grx3JNUeQl20D8EPB4mazKFpPh1NGTrvFvhmCDMeBEDeaPG0NO/E5D
8Cb18dGKEjJckJUxU1MaAgbh9oyYMjIMXV/4s198CBoKR/8ylJOh1qPs3hDf
EDhznlR0w8yoH+djv28IUlPsLPUrsP29+0Mhq28QdqkWLFYqyaCzIB1n0jII
tyYHaIyqyND0xW6epXIQHl33u1CHOThJ0sHlwyBYX63i8KvGztvtd3cNLQdh
dK9S+2cNdn5uzSQcMBgEi4JxUe0vZLitzjGFVx+E9AfbiR8xdxLTvNQEB8Gq
pfaYUi0ZGH5qq6hRBiDv9GK8eR0ZpL/hRulJAzBNpTmSgtnKai8Q3zsATmzL
mdOYu7gp/IYVA5DUkblo8hWrtxCTY1w5A7BZHm0RiZmjq19gNn4AOjQdbXCY
m9pME11fDMASXR7PBUSGxn/MjKpPB0ChaKr/Nmb+g7wxBywHALev/EQg5qiG
x1fGbw7AOO379SLMMjr1J/OwPiVp8pfpMOaPNyhcXtIDQORWNNzDXNqLV9cR
HIDisOFpnnps/xMaT/xgGYCJmI6Su5iLGV62t+71g7cg9bY75tOq5woSKf0g
Sr7SF4n5zqOABmdSP9DuMKnmYNZheMys09cPkeO1V2ox9zCkBZ9t6YcSza7J
TsxFrb8vU1X2g+3lQtYJzHHMspfGc/qhgKWz9xvm31SiFtUf+kFVNkH0J+YD
qhn4d2/6ITo++PQu5pbu+85u3v3wQpMpn7oBuz4OOXMTh34QSw/tosPM8O1b
qLxVP+zovAqmx+wdBH+5DfvhvKjFBC1m00TqSpqr/TCEBes/bD096d+VizL9
0PI2Rn8bs1/PPA3xfD8IyfY6rWF+djMuvoqrH97/Vy9KxrzO0P4ijbUf6sx6
/Ycwc2ZpFYf96wPdD17uOMwKeoNSnut90DsvxliOeTxckvXhbB846VhfSsH8
yfCcnPFAH8wfC9kJwmy95/BFA9cH4hPH7j3FPHO9L1auug+C7PysDTDTPDtI
uJDXB+dIKvRSmOMZ5k1Pf+yDM1GtV9gxP6bn1OB82wfK3EFn17H95BuxjD7g
2wftlrsZ7Zh1DPwvMzr3gbtvfHM6Zo1C0KO26QPh6QE/D8zMu/ZJ25p9oCnJ
+I0b8wdjqi/zCn3wuS9siYKdP++dp4cHRPuwcxY0jjB3fQx1K2fvg6YKs2hT
zHWqjEHZjH2worNjcgbzphvVyIedXljujWRbxs573zK9qv90L7jyyhg/wywn
M2n2vK8XchOYFqQwP7zQUfestRfa7Swe/cLqSVzxubFtfi9oveO9bo/57vjx
Q1buvdDM2x+mgdWfcsDb19aPe4FwKqF5C6vXaXcpjQfmvfDAgvpHNubYP3G4
p+q98FRc6RIV5pU42b4otl7Yk3YzeI/V/3+dX34l0fbCQR5FbTnM37ntnuVv
9kCBSJv8MJYfPQ+Ioe3jPXDuUiczG+aTXbWaJz71gIFSteN/WP6kXRpyupjY
Azdd5lS2sLwSzaei037bA7fdmQ8GYo4mLN7zcemBVb651KRSMvTPtwv9UekB
71X+8nIs/wZOGQrLjhFh+OT576+xPPW7k/Tfgy4iOD3vrPuJ5W0RnTVvXAMR
zhhtRlpj3svI2r+TTQRLJu+rCnlY/rOy/Op7RoTiYywrvViep7g/Ee45QIRP
V0YC0tPJQC4eymCkJkLPbRq2+TQy0Al6LvvMd0M80yEdAcxe2ie0nnzuhmFj
pqnkFOw8Fnq3Oap0Q39wvI8b9r7h6A0vvfSgCxp/xp6tjiPDNeGnp8a1u0A+
y/fUEPb+Uhq2fRIs1gUlIxx9P2LIYHjwzVfKVieImTg4nokmg4GxbuxyaCf0
UgdE2WLvR452jqG0kg7gmiiYDQ4kg6AT40bouw5Qz5cefR2A5enjHX6P5x3A
98Y61sufDO3PnYYsrnZAyQLlzv3XZJi31uwyH20H4ZZ2OS6s7xVesag9S9sO
DZX01adcyUAqCuf5boyHFD+q/pdWWF4KupaPKuFB7OiRt/KWWJ9txPWh4wwe
puj1pX5YYPt/ZOl2HaUN6prCr9y5i/Uvev8x9QW2QZbYqB+7CRkW+UPe9FTh
4GdZyN4ZrK/m+a7iJ3qqFbImzIdqpLDnJ//WMI+uFc6MHT8sIYm9/4Ub2y8s
t0DuVUPtT5fIIPUtolqpqgW8rT6WvxXD8o0rfuLdzRbYR5wNVD+P5eup9nix
oGawyJpLunGSDH+z1OX/bTaCG41O7SLWv8X+Pf21YaoRlKZCLC//m4MwGYZ3
QW2NEHD+lXHc3hzkpvHqnfnQCGeZI2SUdrD+Uu/E8TClRtgO+jbgujEHl+9J
dEv4N8DGxu/tePIcXFHTXhjjrIdcprcm6W1zcPfNk+0L1PUwjj/P3No6B+v8
lSr0AwibN++fXGieg8rhCXs3TwSTN77c52+Yg5DuNmdCy1fgtjwWHVo9BzUv
WENEzeuAmE49vD93DgRCRZKY4mogufxT9GTwHBie2dTlfVADXMxhuNTAOSi8
F2esKl0DtDYPBayx/piWT8QrZ7AaSic//Tf9cg4e6I/F7XFWA/WVXuYWrL+2
NEQXuxMrYfrW7n8yNtj1Xw9gEP9cBj5JlQItyphH6ZgbKQWQ3frgYe7KLDRa
ffw7mFAAzqvZx4WXZuHf07Y0as0CaHqbapy7MAtUMp/Y36fkwymuPa+MmVmQ
0Y4zJdzMAxqew66Bw7PwRSJRUvtLDtznIBXsa54Fc8ru6FxiOpS7DJ3ejZ+F
3UnW2G6NaLioFLsfpzILvXG5OlqFUZAjI1iypzwL3hEDlRT2KPAVpjsqoTgL
zMrd/Y0zEXDpBe7EB+lZ0NVyrmSgDoOY2d5zpsKzUN9pKrMa9BqsGVcICeyz
cPQbPof6owI4uG4flJmfgYX/MnR2SyKRrvu75Dn/GZivkWI/cD0KBdOkn3vz
agZojnspLc5HIUfSgvklnxlIPsTn/+t4DDrQuTvh6T4DSKTjg9OLOMQ64Hhp
F5svtW3SQ1fkEhC1fs1APTYniXZ4GWuop6HPSSeOGB+bAXGvk3tsSnmo3SKX
dTqTBGUqLas3vPOQ3KhDrFsaCSppVd2dUR4SqLjHeyCZBNKAVB1U8pHqAo+q
7HtsHhasvCqrXoAs9gZaXoaQIEB5LPGv+mf0yZTdcBabj2nfS01nxBejXe/y
uh/SJDjdgbvBaFmO9CmVrmbN05Au3xI4/bIcDbC5Oj2un4bhdf/ruSnliCYg
wMkDm89N8pTdDk6XI+Ho8ldRZdNwcSqYhde8AtVS1raqMqbh++kBbxPjSiTL
c35pyG8a2sUUVY4rVyMNlds61urTgFMbP+s2Xot8W85frMTmovThl6Uzv2vR
Kfku9xCPKciJDV1XPlKHRIvkFMwcpwBHuumB16pDtlQ3pf/cmwI5fHykQEUd
auKiETt3eQrWDrl8+Rf6FQlOWLjK/p0E2XjG0MNH65GBDAVpe0yC0r273/eS
GlBDc6+37+MJUPd5e3/nUwMKRcoNkdYTsPfv05G1sgYkZttIm3pnAl5PSh/D
ERqQYMFiWO21CbCflCg+s9mAPvjHDy8IT4DFNY+RuGuNqAM/a8S2Mg4DrCKz
VuuN6D+Ob07Fj8dhn9Tw89eCzejOd04O94djoHxtH0fMpWZk3hhWkmoxBoxx
5JRExWYk6enuTTAag8bTK1Gxes3ogPFk9vErY5DAfnVMwL0ZfTTTfFJ4egxW
GBtGWlua0Vfe50dLR0chI1Gp4M/tFuSQHoyT0BkFXl5DF+b7LYgUXy1xVW0U
fC7cFTlk14L8hFf+GcuPgmzzCTsGH8yPQr56CI4Cs9INoYi0FuT7iZaqgm4U
yqwS3vEutiCjguTVw3UjoHNIzlTKrhUxJKnr2oqMAC4j/Xr1s1b04cyJedqz
I7BQza0o/bwV+XhEnUw6OQL3CZGMXKGt6PWek10PCzZnuc7ejshpRZ4/zzZK
LA3D/B19JqGZVtSw2ae3mDUMn0NHrU/o4RCdyVrncd5hOLu71lNnhEPP/yi0
5XIOQ1O1hvLtuzgU3GsSonBwGIw1XA97P8KhlFGmx2Z/h4A3RKvQ0Q+HuN5a
NiRgc4903qWZfZXY798PGT2EzTkiXPzjW0fbUOVus+/coSF4FGPjm3yyDZ2r
/+STwDQE+5dknYCvDQUE0dvfpB6CQxalMo9FsJ+/HOStXxuEx7Bl6qTWhiLm
8f8+dA+CUYCjMti3IfWTorm6YYMQkn0FN/C1DYUUHlqs3TcI447V7llNbUjx
j6bCM6pBGOFXeunQ1oZoGF5lCG9hfX/iTtRaTxs6z5Fd92FhAOToBXtT5trQ
VxZPYc/WAWCN6mRr3IdHi45bO8p+A9AuZxDArINHQwFl0Yv/+iGe5fS1u3p4
NMjvQVrb7IeDDcEaOYZ4tCkl4bL9vR/kHTO/CdzFo3Itt2cs4/2gKBQ/12qH
RxKVrX8uVfXDdl3nlagwbP2d/zwisb58wW2R+DASW0/ccjjpv37I12NKkonF
IzdJmth88364qs9L/TURj/Ae/CJ4nX4QD5H9a5eHRx+CVGgYsT78z5LPszs4
PBpjkA+JI/UB3kPapYKAR+9qap/lDvcBjY1fE1MXHr1VftH/tRvrk3/+uBbf
j0ftbPHbi3V9YM1edtqMhEdLD8xp1T70Qf8/00jHbTwKMCHcPWjQB3wdNnj9
XTxy5tPTEdbug63ohjtC//DonmcITkOlD4QaUFQzHQENbPyyfSXWB99FXS0/
HiSg/bciAv+y9MFhxXeqpDMExHg59cmRll44cC384ykBAhLRpaQTa3vh2AVT
s1uCBERvsmEbXtYL5b5m+z5fIKD0g4NZLBm9wFj2TfSIFAGdmNlPz/q6F5LH
/C2S1QlonorzzgWVXvD2+q7vfJWAHtwWZdmQ7QWXEeOyy5oEJGHaY1Yj3gvM
PhYduGsElBP/+Js2by+sDcZZBN4koEfZTW3O/3og2s+xrcOcgM7uimaR63rg
gs4Yl+w9AkpMCfxTUd4D3A9MVxItCejrOh99cEEP9DJsMhrcJyCGHwQ5sY89
YLTzQcXRloDCQzy1/J73AIErNDbnEQHtxr+2vPOsB4rf29mNPCag1eRTMhJP
ekAjIjj/nD0BRRZ95iHf6QFKfddLVycCarxcw3BToQdEunb3ezoTUMANorCY
RA+kSkryuz0jIOODiJNVuAc+etz5fdcVu187nGb7iR5Yb+Mq13AjILEjFyPy
DveAoEEAtbA7ATU/P5L+hrkHrPF02pMeBDTLSxLT3yHCuuaaRqEnAfmoceVL
/iBCjJDUsJsXAeG2H28dWyKC136/0t/PCeiwxXf6uREi3D7q9jTXh4BuZhaw
+1UTIUxr3x+DlwTU3Z+lXF9EBDP1j9SbmHO4jz/cw/rw8tJyvzOvCIjXWxV5
xhFhqbuA9jPmU31kSk0YES7QRtNIvCag/i+jZ3f9iGASw+XP74c9b4+32b7O
RPjqpcQShZmOJLfZ8ogIN8K0jm5h1qZi0WOxIkIL/6tsI38CEo93q9A3JcK9
UaH6Aswr0j+F4vWIMPsqyHIPc5fIr0KSBhHyxUhvrgQQEGfCqpowEKFC9Lla
AOaq+4bLLtJEqGROC0CYD8p9yGoQIQJ7aKLxOuaUcAm3A2eJwFBWUckVSEDr
6dHmZiex+29VzFHGLOQjYp53hAiRl58L3cY8/93Z7Q8zEabGm8Ae81+/kTwd
GiIoRlt/88T83+XUbaWNbnB+ny/4EvNWU9zQHKkb9MzX/77AHPvA7WcYsRsa
o/3tnmF+ESBgIIe6oYv/q4s15nbWwM35gm7IlV8/dg0zv5MXKS6xG5oVXE2E
Mf8rJR/VCsXcnilFh1nMPDt+z6MbkttHigew+4nwT31S9rAbUk3tupIxa7eV
RdkZd8OTnto3VpitrzccOH+1G5g7zq5yYzZpzpqdl+yG3zyMP3uw5xl4X509
+0w38JPqk70xv1txT7c93A37LMt+nMHMnsYXI0rdDR9E1VcbsP1a1+P59ovS
BfZH+6NNMC9r62SiyS7YlxA88xTbf2HqXPPbtV3ATv8ifA07H5HbUZbCeV0w
fWb/ki3m42Unh/7Gd8FOfVb5VV8Csnv74myBWxeo7gQL5mLnzYCBiS4Im8OM
zKv0GDA3Ln28Z3OrC740l7bmeGPry2kkn5PoghQHK07KCwKaoNkfuJ+vC4I+
8JwRxWy3Jb+1wdYFz+7HOcZh518q5dIrwmonPPioUImw+tjMzU6pnugE+YDW
OhJWP66RUwZ5HZ1wWc3pCBtWXx70y6/jcjvBMCXI5iRWf2Z9Dxgi4juBHz31
Po3V58zuL8E3QZ2g+zeH+ShWvxOi8aZvHnSCn/JoRc5TLO+0SJX5fJ0gvvM+
7i2WBwestopGD3fCkXZbSQc7bD+fvmFkoe2E66rKn09h+VHrqjvoNNsBq0Hd
zeIPsP33FZC3yOiAIAOpKjKWR0ces1qkxHTAqbWvzjHWBCSQXbgx69cBFY4m
mlNYnk0OS7s42WB/rxIbKnSHgLZx5GMFAh3gk0s7V2BKQNSD5/9Qc3aAEtfc
AWETAmot0rYwZewAYX5J0uFbWP7OClccXGyHw2cHEt/fICAF9+iJD5/agX7L
KP7FZQJSeoKYRUTa4ZNRSGWSMgH9Edk6lsfdDothvnXVigTUQP7bIXygHdT3
XQyYkCWgmGYrMSkKARbf/xMfFyegHsMZrofFBBi/2c1XyUNA12yF/PWkCYAr
37Zy48byZD/9n20BAtxwEk69yEVAcXXn5bM4CVA1ZsQdc5SAWEt4uBm38VDq
MKV4iJWALjlplC59wQOR3sLs+xYePRWXZlFQxcPw+bR7dzbxSM/K9ry5BB6Q
y2JZ0wYeha51H/XjxwMNDYfB61U8epJs898wAx56dhTCvs7i0ZbU5LH09jZQ
YmORFujEo5mLBL/GW20AS96OzQl4pB98NlPmCQ5KM+0VfN7jUdPL8++q7uKA
7XXta0nsfX6YeeG9oi4OMjfcYsPD8Uhj4kXf9Us46OZrWqDyxSOG6ACz2K1W
cGo+/3HqPh6VZH9yq/FvBYu/1/kjBPGIclv09aO0FsgI5yJp8ONRhPJmPk90
C+Rn8Jlv8+CRFrVfzfDrFpgVO56qxYlHHqmVIUY2LeDw+I1fMj0eFV6uV/MV
bIGLoWExfKQ2lNlcKxP7uRke5GQUxkS3IU2h7N+4+iZ4ENfpHxTehqpWqTX+
FjeBIvs1S9fgNuQ5jmuVTW8CUOcQvezThsrM1u/V+DeB0yLJ7M2jNtTOe1Bl
TbsJyleoaZkut6HEsEtVgoON0PaerJ0+j0P/skgR45QGSBDVnFAm4VDbSU2f
iJkGeMZX4T4whkOxfvYGmgMNoMZr1LtBxCHpStmyppoG+H1D/eqvGhxK2NAM
+YbN7RUVsdP7w3HIr/jsiY2TDWCV4h+cKI5Db9k0xZlv1IOD7PS/RCEc2h2P
0VZWqYe26J917/lxqOAG/2tXyXq4XWly/NUxHMrzXry1caIeVgVT/E9S4dCq
R7e1EhGBdqL9H8euVsRy3eGlFwOC2MQrDQX/taIK9rgpfY86sPMbFgq/14qe
MznSfMHm/EMz8sa2pq2I/gK3rqh6HQgSJWjZrrWitw9NXCUO1sH+ycSNU6Kt
iCp4zr4qsxZkMjnfXdloQfzm6zFF/V9giZlVEO/RgiYIW4ku8jWgNbEtw+jU
guh+GjcJn64B3NtNq8uPWtAo2/OoFcYa4OR5ypGBzRs0T2/Ihw9Uw1WhZoWL
Ci1oI0b0xE3Haig+lbLf5k8zytgQsZ7KrYIb55iXrmLzS1VwzOB5gUoYURdb
YHdoRlGyMT15ByqBKr7Ef/K/ZtS06PVa9ncFLFXTlNw3bka9UZLHndoqICVQ
7aiSdDMySzn28MHjCpgvOeTHu9GEqjlJtkal5TDN3jvSYtuE5LjZhR5dKwOl
NrqHF7B57MfRdm+mj8Vwu7Eq/p1qI/K5FulcHlwMYpy2yf/ksHmtldvysWsx
9IW/FG8VbEShEifFfukWw8rWZoEIQyPCr8n3vqQthq52UHhY34BeH3/I7Pmk
CI616M4nXmpAhlRPd+jeFIJ+9u6d7PMNaPrq78Oz/xWCVFrjz0LeBpQwzJw0
oFYIHIqp8eUHsPnyNPHE1p8CIP3c2kxZqkcPrjYclbArgD/TMpI/UusRHZlT
y88gHy5ytDlHHKhHGwy8EvliufB2hOOxF1096mSIctVhyQV1xda21p8IDZmH
aNAvfIIgN4F+ww6EXv9QT6tP+gR2zicUhLwQWv2ym2t+8BN4/PjOVD/0FQ1c
1HNR+JUN+mvaiy1v6pDVDdx2ZF8mJM8JcH1zq0N8X2R1r5VkQphn2llG6zoU
UfIxmzsyE1R1JMcl5OpQwit5e1bdTFir5ArVI9eiu+1H8493ZAAuab4zUbEW
/XbRTF4gpMPC73CGooUapB9wMt9uLBUEw6iO5PTVoJvnaP11UCqY2J82S0Q1
yPb6qodKeirosr2p8XhXg37XZCG7x6mgRJ5W3adRgxgyr69176bAk28itz0y
q9EOC/FV7ZkUEPWbfdVrUYW+nHfz9KP7CCwf+ObMrlWhXTbLv909iaCEn5SY
k65CpftKz2gmJ8I0Olv+jbUKTaVvm32VT4T77TZjxC+V6MejHGKjcwK4kyIT
2Dkr0Tz13S6R1Xggdxzmi28vR2UV4PuB7h3YKOhOS1aWo8rZUhbL4Tj4JTNq
3JVWjuZo1Cpv5sfB8z2moB2PcrRMcnetNIwDi+CTvrKC5egf+JUFZMfCsUyS
u65fGXo1Yr5P6VYMSPrSJhxQKEXL2aPtrD2RYBBUhnssUIrEiNys8rmRMJFk
Yow7VIoebiW9inwdCRUOxWUeiyWIvucUc6N0JDjrCu62x5YgdWa5wPPJEeD/
4ZiV8Foxmkxv2zizFg7Xs+gzd9KL0EmNH+bBMSEQXvaG/1FYEZom0irS6oTA
y1s0AcOuRWhRTO/jDG0IPMn9ylSiVYSadvZN9TwLBtUunvTiyc/o5RXytuOd
IDgQKRuz+awQGf98v69cIQAk1xb3B6TkoT97Thn8mq/AKHYzS8Y5D60LKNpc
3f8KgjWrSxev5CE23LV9nURfyND4fVtrORc1q+aN7LvjC73X1Y0ZpHOR912N
GblnL+GQl3ONZ3sOUrcxWvnl9AIqp6xf5G5morUZu5gXp9zAqvWbweOOTPRt
wbdUsNUVXmpUnxZJy0SJUzpZvvau8IUs2FV6PRMpnShqUmxwgdMcn+K6MjLQ
v6UTewP2zyAIH6SuZpCObHMTxv2WHGFK1zT22Pl0pBF+bpfuoyMwSScHUf6m
obYrHN0X9RzhP30+37TcNERYuaYSWeUAIkCc5aZJQ66Xme8Q+J4CZ8xglXNx
Clre7kxOan0EyXX3hR8GpiDZOmTNp/IIOG4xLZnfTUFHvAN3dmttwZi6ycWA
KQXdlbixVl71EBw808ZKG5PQnR85xy7VP4D4IgO+9jOJ6DW1q6jwQWv4GWpq
w0j8//8DOzsYkq3AXPNGhNbzBKQ1/85YWtwKqtUc1qf6P6DA1q92EUaWcEk7
75xxQDzqdj1x0+iBBdh8v/vWdykOdU3q2icam8IZK4uSZ2FxqMpDxyr9jQkU
F2z0OIjHob/3ftqvNxvDkYpHHn6usaiWg+hyD4xgkSIacpI2BjGK7Hp53DGA
cKmokttZ0WiZbOedk3sTTJepa9O0otH3EhPc8T19OPLr66xeRBRyGeYors/T
g/vLgqmCpyIRB9fxhJP3dKBS+8NKVUMECjw+vOB16RpU3O38Y2ATgbZfWaTe
YtEG6qsR+bdM36LCW5cEnIkaMGVwkafO7Q3ie9OScDFHDfAB2SciUCiiR0d8
oVAVol8ZWXgyhqL3fXdl62pUoFr0aEbsu2CETEuM6LsAnvMVS32vCkDJXyUU
Tx2XgyHn1diX1AGIRuOVzFKoDLQ0yO5d0PZH9XoGhT4s0nDoVOHXnrHXiJ2u
vOSPuATUXQkLJPC/RqICtMHjgxfhqSNJcsLuFdpvrf/EK1gcFioTjutT+aKa
2+/9us9fgJaUi6hE6yV6wlWAzMfOw8yezDVzAR9k1aNcfzPrHCjanz/9Q+c5
urQX9lg/6AwYtb+jD5/2RIpMyeJ6yachle0mn+UzD9TzsXRKJpkHJK73Vxcm
uqLNF8Yv6baOwUDW6AGhiy7ofc1By9NrHGBk+klvssUZxRXKl2afOAIKivtW
2m87IbEuy4uhbmxgsJxwfYPigCaEuw/4sO4HQdn2pk/MT5Fj44lMhwhG6Cf7
C81IPUHD0T9Ue91oIaBiLDvC0hb56a8ROQL/Kc9XbR2pCHuANL3M1mkWtpT1
J+qvGtRYowhbJme5gxvKXJndnLYL95CaT5Qu679l5YZ0Su3aeTNke2/9xtOn
s8rUvAGztAFGKOz43cs2k8PK+qqzeqyzemg3869o4+92ZYL4ojX3q6uIvZ9N
+uBolfIV26sdAi+lkUNxmM3M0Hvlnk6pws/uAbW1p87Zx+Bl5f4HBX6F/A==

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
Ek8GsVR1RCAOw8AnY7aFBDL8u9Bc3FE/DGI8Gl60yWRImg1iXQ4Yhm3NIRvO
dDKwTUnjn58chkz+3MUhrA5N63QOi8MQsMy2WBT8xParrjE5XngInktk+DhX
kUEd/9ye6ewQrIy0+sgiMnhHJnWTGIagjYlLqraaDF+POmXEdQ1C3LOrjnl1
ZDhtb7382GQQuHTSG841kiGD+ctm7+NBqBL649yG2cva/OEDlUEo/6h5wqaJ
DCdYgpkeXhmEeGvfs4XN2Pp8xAJNtgbglqy0C3cbGZSuD/M2fx6Ar+z6WQFd
2HX0ZlXPfQBu3hV3P9xNBhNke2nFdgCcVrbvhmCO+/qm/5T2AAg9fNv8tYcM
pQuT0r68AzD5GGf7po8MY/0GrwSOD4D67KuDFMyHzgoyExgGYCXHNNWonwzs
IvlJTEv9wLkY2SA3QIZ7c2E6SaX9UNv+ZHF6kAxSPzdEVTP7YS9byFZliAzu
fFYBGzH98G67fiMb88cPVrmaH/rBksNiv8UwGe7mylC47vVDQKLgte4RbD91
Buo75fqhXTOIIDBKBlX5ozy+V/vhVt9pgzeYIZXPZJujH2zf0sacGCNDt4Oz
wdpEH5g/UH8mN04GwqQrKaq/D0abj4e6YZaJCP+p0NwH+Wx7hxDmm7MlH8ML
+iBNmGZOjEgGGo8YR4XUPuD+RnvLCrOx0T3cckQfvJz/s5SGeVMY9+6+ex8c
NnjBz0Yig6XMs3kq+z54T9NZrIi5r86ltNC0D5rD/3yxx9zc2OxyEstdfjdB
8S7MEsU6aB9PH5x6TS/lSMbqt1tbvYqtDx5U1itGY/44yn7Xha4PJhM74hDm
JxwvXLcXe0GeGKuyD+uLWns1ZVWkXqDxvBXDg5lWztLQo7cX+rXp5aUxs9Wq
rrP+7IWQ43HeVpi96BRnevN6wf6qroAP5vDM47fjknux968t7ljMfT9TT7z8
1gtUQ8svCjCrFfc8EQvohSrvXAYc5gV7NzZat15gcP++14u5/b6vVLct9v0a
6qpTmPF7rQNJL3pB3/XEygrmwNxLv+x1e+Gqv93SLmbNdQ9b5fu9sPWnR55x
kgzrA9k2pxR6wfZaNuUwZqcm37lVsV4IrbNc48Csl7Uy0HKhF1yOBj44hZmm
ve5G6qleUA97x3oGM+1K/1l3tl5QLMo+fRbzN0XGD3p0vWDSG/z5f157Lqwn
tdUDOU+iH/FiTn5+vohzqQe608HlNOapukaff6QeUDq6tM2Fmc1mfni0twe4
104MHcO83fU0p6axB3ajRY8ewCxXwbgv7WcPHNEuzKTFnGpd3PMpvwf+Wu9P
2Pz/+5W64JDSAwkXY1cXMN9IsKY2jOiBxzhK6hjmW9MX9VU+9UCMs3lpG+bm
YFlZcfce4Hnvff4nZoaL75L47XsggyZv6ztm/+zyz8fNeoBVTPdSKOYY30Yq
Br0e4JDeqnqPOSr57daWWg94XN8rMMHs6HTAZ0q8B5ze0tQIY66+HXRy9FIP
WC5ODx/F/O7jX5m+0z3gnLahvY7V04NvBWdaGXogitnSvQjzgHjSbNN2N8wU
llwM/l+9TRVINy13w+f4dUlzzHsCz760DnRD8n4ev5OYna/uHW9r7oZ+zz9C
y1g9827ibTuqumFc5NlqNeYXbpNlQ8ndMMWlPfwEM9WQTAo5vBusavftCWDu
PtVkvuDXDXWv/RR+Y+cpP/9NyH7rbuDRdBN+/7/zNxS9ftS4G/oKDo7cwHw5
aVGc/1E3fHhR952G+L/+fuDpPZluKKoaznPHzu9Jmx6jYsZuuPnj+7sX2PmX
vrdK7N7ugrIAUXVuzLa3OW6vUrpANsP8bjvWL2yP3OmS7OuCax94KoUw2zRL
/x5L7IK+Q2ZBQ1j/eb2rL+gp3QXTzut+A1g/m9O8E18j1AWfWda5rTA3hxsy
7uPtAr6gtPH9mCO5quu9GLtgPttw8yLWD2e99m+l9nXCAn7+09NeMhwW176g
bN0JuEqxMudOMhx0eeOSatwJZ3vxEasdZGAdU+jZ/7gTmDdoiywwm3c/+tYk
2wkOgw3hOu1k6LrM42/O0gl5JM5LPK1keGO9NsqW3gHkOZ79DxrIQPS/JmYS
3QEHnpICfxKwPA2y1asI6gCF6vAwPszcUvlcr5w7YONY4YnfOCyPetReEu90
QLWJOo0Dlj/7bqS23xxph+PSjo3Xsfyi45eiEcC1w4lXHcq+WL75qZvMM+e0
w1a9tupgJRnc1nADRNd2ULZvGrerwOaTUROdEt52yNtFspGlWH9/LnWUw7wN
OpwrlWMLsDy7lHlS9GEbnP6P4+pAPhnOkEwoD2XbgOlhb+ohzJZZncuJh9pA
TwuE3mH5elys8PPL4lY4w/ekQzGLDEfUSKr5ey1wZ36u5HMKNrdR75jyhTdD
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
K7h3lg==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
H27AuAc=
         "]]}}}, {}, {{{}, {}, {}, {}}, {}}}, {
    PlotRange -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     PlotRangePadding -> Scaled[0.02], DisplayFunction -> Identity, Axes -> 
     True, AxesLabel -> {
       FormBox[
        StyleBox["\"\[Phi]/\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(e\\)]\\)\"", 
         GrayLevel[0], Medium, StripOnInput -> False], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
         Mod[
          ArcTan[
           Part[#, 1], 
           Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
         Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
         Mod[
          ArcTan[
           Part[#, 1], 
           Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05]}, PlotLabel -> FormBox[
       StyleBox["\"Wave eq (BTCS) : Relative Phase Shift error\"", 
        GrayLevel[0], Medium, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-0.2072601507763384, 0.9999999982593097}, {0., 
      0.6798122106287388}}, PlotRangeClipping -> True, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Alpha]=0.5\"", "\"\[Alpha]=1\"", "\"\[Alpha]=1.5\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.823928557545086*^9, {3.8239286085497627`*^9, 3.823928638305612*^9}, {
   3.823928761014021*^9, 3.823928781336753*^9}, 3.82392885457559*^9, 
   3.8239289174853086`*^9, {3.8239289515571003`*^9, 3.823928958880179*^9}, 
   3.823928996775257*^9, {3.8239290507329493`*^9, 3.823929058278564*^9}, {
   3.823929117891856*^9, 3.823929175164311*^9}, {3.8239292454023247`*^9, 
   3.823929278151087*^9}, {3.823929359976552*^9, 3.8239293685285397`*^9}, 
   3.823931572428891*^9, 3.823931655473568*^9, 3.82393171307201*^9, {
   3.823933196344285*^9, 3.823933217037355*^9}, {3.823933354225716*^9, 
   3.823933411267642*^9}, 3.823933454038447*^9, 3.823995075277994*^9, 
   3.823997668685569*^9, 3.8239977120281773`*^9, {3.8239978798384323`*^9, 
   3.8239978919344254`*^9}, 3.823997953530115*^9, 3.823998222571891*^9, 
   3.823998561560771*^9, {3.82399863115139*^9, 3.8239986547926817`*^9}, {
   3.82400061745091*^9, 3.8240006278633947`*^9}, 3.82401458476845*^9, 
   3.824017062146443*^9, 3.824017835949345*^9, 3.8240193022161703`*^9, 
   3.824094327025364*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"mu1", "=", "0.25"}], ",", " ", 
     RowBox[{"mu2", "=", "0.5"}], ",", " ", 
     RowBox[{"mu3", "=", "1"}]}], "}"}], ",", " ", 
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "-", 
        RowBox[{"4", "*", "mu1", "*", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"x", "/", "2"}], "]"}], "2"], "/", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "mu1"}], "*", 
            SuperscriptBox["x", "2"]}], "]"}]}]}]}], ",", " ", 
       RowBox[{"1", "-", 
        RowBox[{"4", "*", "mu2", "*", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"x", "/", "2"}], "]"}], "2"], "/", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "mu2"}], "*", 
            SuperscriptBox["x", "2"]}], "]"}]}]}]}], ",", " ", 
       RowBox[{"1", "-", 
        RowBox[{"4", "*", "mu3", "*", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"x", "/", "2"}], "]"}], "2"], "/", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "mu3"}], "*", 
            SuperscriptBox["x", "2"]}], "]"}]}]}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "Pi"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "1"}], "}"}]}], " ", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Nu]=0.25\>\"", ",", " ", "\"\<\[Nu]=0.5\>\"", ",", " ", 
        "\"\<\[Nu]=1\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<|G/\!\(\*SubscriptBox[\(G\), \(e\)]\)|\>\"", ",", " ", "Black", 
         ",", "Medium"}], "]"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", " ", 
       RowBox[{
       "\"\<Heat eq (FTCS) : Amplification Factor\>\"", ",", " ", "Black", 
        ",", " ", "Medium"}], "]"}]}], ",", 
     RowBox[{"PolarGridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"Pi", "/", "2"}], ",", "Pi", ",", 
          RowBox[{"3", " ", 
           RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0.25", ",", "0.5", ",", "0.75", ",", "1", ",", "1.25", ",", "1.5"}],
          "}"}]}], "}"}]}], ",", 
     RowBox[{"PolarTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Radians\>\"", ",", " ", "Automatic"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.823997462022936*^9, 3.82399747255653*^9}, {
   3.823997532397553*^9, 3.82399766378434*^9}, {3.823997707058017*^9, 
   3.8239978076625834`*^9}, {3.8239979204108677`*^9, 3.823997948583314*^9}, {
   3.8239984653220263`*^9, 3.823998491034329*^9}, {3.82399859196957*^9, 
   3.823998603611198*^9}, 3.8239986507656193`*^9, 3.824000745145138*^9, {
   3.824014372024466*^9, 3.824014454978475*^9}, 3.82401457317699*^9, {
   3.824016952179389*^9, 3.824016960856387*^9}, {3.824017036223558*^9, 
   3.824017047508843*^9}, {3.824017151700796*^9, 3.8240172498444853`*^9}, {
   3.824017336588107*^9, 3.824017502474267*^9}, {3.8240178736920557`*^9, 
   3.824017874185335*^9}, {3.824017911773391*^9, 3.824018013883807*^9}, {
   3.824018526461307*^9, 3.824018533794219*^9}, {3.824019289430032*^9, 
   3.82401930728336*^9}, 3.8240193990172157`*^9, {3.8240407625629063`*^9, 
   3.824040776522208*^9}, {3.824040998552631*^9, 3.8240410139658117`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        LineBox[{{0, 0}, {77470.28072965571, 0.}}]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        LineBox[{{0, 0}, {0., 77470.28072965571}}]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        LineBox[{{0, 0}, {-77470.28072965571, 0.}}]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        LineBox[{{0, 0}, {0., -77470.28072965571}}]}}, {{
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 0.25, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 0.5, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 0.75, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 1, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 1.25, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 1.5, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}}}, {}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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

         "]]}}}, {}, {{{}, {}, {}, {}}, {}}}, {
    PlotRange -> {{-2, 2}, {-2, 1}}, PlotRangePadding -> Scaled[0.02], 
     DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
       FormBox[
        StyleBox["\"|G/\\!\\(\\*SubscriptBox[\\(G\\), \\(e\\)]\\)|\"", 
         GrayLevel[0], Medium, StripOnInput -> False], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
         Mod[
          ArcTan[
           Part[#, 1], 
           Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
         Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
         Mod[
          ArcTan[
           Part[#, 1], 
           Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05]}, PlotLabel -> FormBox[
       StyleBox["\"Heat eq (FTCS) : Amplification Factor\"", 
        GrayLevel[0], Medium, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-2, 2}, {-2, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Nu]=0.25\"", "\"\[Nu]=0.5\"", "\"\[Nu]=1\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8239976687306337`*^9, 3.823997712083345*^9, {3.823997879953465*^9, 
   3.823997892033135*^9}, 3.8239979536364202`*^9, 3.8239982226804123`*^9, 
   3.8239985616687393`*^9, {3.823998631256981*^9, 3.823998654903343*^9}, 
   3.8240007468952*^9, {3.824014446784314*^9, 3.824014457258498*^9}, 
   3.824014584858945*^9, 3.824016963116499*^9, 3.82401706227883*^9, {
   3.824017168936304*^9, 3.824017197315209*^9}, 3.824017252201906*^9, {
   3.82401734116708*^9, 3.824017504256732*^9}, 3.8240178766263638`*^9, {
   3.824017922198731*^9, 3.82401801580162*^9}, 3.824018536705555*^9, {
   3.824019302268108*^9, 3.82401930966308*^9}, {3.8240407680348663`*^9, 
   3.824040779215375*^9}, {3.824041000811014*^9, 3.8240410171433353`*^9}, 
   3.824094327096657*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"mu1", "=", "0.25"}], ",", " ", 
     RowBox[{"mu2", "=", "0.5"}], ",", " ", 
     RowBox[{"mu3", "=", "1"}]}], "}"}], ",", " ", 
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "mu1", "*", 
           RowBox[{
            RowBox[{"Sin", "[", "x", "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", "*", "mu1"}]}], ")"}]}]}], "]"}], "/", 
         RowBox[{"-", "mu1"}]}], "*", "x"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "mu2", "*", 
           RowBox[{
            RowBox[{"Sin", "[", "x", "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", "*", "mu2"}]}], ")"}]}]}], "]"}], "/", 
         RowBox[{"-", "mu2"}]}], "*", "x"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "mu3", "*", 
           RowBox[{
            RowBox[{"Sin", "[", "x", "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", "*", "mu3"}]}], ")"}]}]}], "]"}], "/", 
         RowBox[{"-", "mu3"}]}], "*", "x"}]}], " ", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "Pi"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Nu]=0.25\>\"", ",", " ", "\"\<\[Nu]=0.5\>\"", ",", " ", 
        "\"\<\[Nu]=1\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\[Phi]/\!\(\*SubscriptBox[\(\[Phi]\), \(e\)]\)\>\"", ",", 
         "Black", ",", " ", "Medium"}], "]"}], "}"}]}], ",", "  ", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", " ", 
       RowBox[{
       "\"\<Heat eq (FTCS) : Relative Phase Shift Error\>\"", ",", " ", 
        "Black", ",", " ", "Medium"}], "]"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.823998038907083*^9, 3.823998281324341*^9}, {
   3.82399831548777*^9, 3.823998360189829*^9}, {3.823998537440069*^9, 
   3.823998587460699*^9}, {3.823998652703597*^9, 3.8239986776337013`*^9}, 
   3.824014569962921*^9}],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,6,10,30536372774484139750,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.823998680228776*^9, 3.8240145849049397`*^9, 
  3.824017062398687*^9, 3.824019302322118*^9, 3.824094327132938*^9}],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,6,11,30536372774484139750,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.823998680228776*^9, 3.8240145849049397`*^9, 
  3.824017062398687*^9, 3.824019302322118*^9, 3.82409432716323*^9}],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,6,12,30536372774484139750,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.823998680228776*^9, 3.8240145849049397`*^9, 
  3.824017062398687*^9, 3.824019302322118*^9, 3.824094327174673*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,6,13,30536372774484139750,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.823998680228776*^9, 3.8240145849049397`*^9, 
  3.824017062398687*^9, 3.824019302322118*^9, 3.824094327181006*^9}],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"",2,6,14,30536372774484139750,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.823998680228776*^9, 3.8240145849049397`*^9, 
  3.824017062398687*^9, 3.824019302322118*^9, 3.824094327187498*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}}, {}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
SW+5qXXM69CXTw7/H0umuOI=
         "]]}, {}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         
         "]]}}}, {}, {{{}, {}, {}, {}}, {}}}, {
    PlotRange -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     PlotRangePadding -> Scaled[0.02], DisplayFunction -> Identity, Axes -> 
     True, AxesLabel -> {
       FormBox[
        StyleBox["\"\[Phi]/\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(e\\)]\\)\"", 
         GrayLevel[0], Medium, StripOnInput -> False], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
         Mod[
          ArcTan[
           Part[#, 1], 
           Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
         Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
         Mod[
          ArcTan[
           Part[#, 1], 
           Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05]}, PlotLabel -> FormBox[
       StyleBox["\"Heat eq (FTCS) : Relative Phase Shift Error\"", 
        GrayLevel[0], Medium, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4.321881270774229, 
      1.78427806805621}, {-1.9518249146653794`, 5.452161086594143}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Nu]=0.25\"", "\"\[Nu]=0.5\"", "\"\[Nu]=1\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8239982227188377`*^9, 3.823998232597974*^9}, 
   3.8239983257562532`*^9, 3.823998561794153*^9, {3.823998631387706*^9, 
   3.823998680318615*^9}, 3.824014585003644*^9, 3.824017062636137*^9, 
   3.824019302435523*^9, 3.8240943272562838`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"mu1", "=", "0.25"}], ",", " ", 
     RowBox[{"mu2", "=", "0.5"}], ",", " ", 
     RowBox[{"mu3", "=", "1"}]}], "}"}], ",", " ", 
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"mu1", "*", 
          SuperscriptBox["x", "2"]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"4", "*", "mu1", "*", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"x", "/", "2"}], "]"}], "2"]}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"mu2", "*", 
          SuperscriptBox["x", "2"]}], "]"}], "/", 
        RowBox[{"(", " ", 
         RowBox[{"1", "+", 
          RowBox[{"4", "*", "mu2", "*", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"x", "/", "2"}], "]"}], "2"]}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"mu3", "*", 
          SuperscriptBox["x", "2"]}], "]"}], "/", 
        RowBox[{"(", " ", 
         RowBox[{"1", "+", 
          RowBox[{"4", "*", "mu3", "*", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"x", "/", "2"}], "]"}], "2"]}]}], ")"}]}]}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "Pi"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "15"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Nu]=0.25\>\"", ",", " ", "\"\<\[Nu]=0.5\>\"", ",", " ", 
        "\"\<\[Nu]=1\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<|G/\!\(\*SubscriptBox[\(G\), \(e\)]\)|\>\"", ",", " ", "Black", 
         ",", "Medium"}], "]"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", " ", 
       RowBox[{
       "\"\<Heat eq (BTCS) : Amplification Factor\>\"", ",", " ", "Black", 
        ",", " ", "Medium"}], "]"}]}], ",", " ", 
     RowBox[{"PolarGridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"Pi", "/", "2"}], ",", "Pi", ",", 
          RowBox[{"3", " ", 
           RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",",
           "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13"}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8240145153666573`*^9, 3.82401456300989*^9}, {
  3.824017054381509*^9, 3.824017058063451*^9}, {3.824017532853476*^9, 
  3.8240176212100573`*^9}, {3.824017654968162*^9, 3.824017719268608*^9}, {
  3.824018023114099*^9, 3.824018059669902*^9}, {3.824018131476569*^9, 
  3.824018131988823*^9}, {3.824019298738096*^9, 3.824019316315778*^9}, {
  3.82401940723704*^9, 3.8240195302504177`*^9}, {3.824094313158319*^9, 
  3.824094319944013*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        LineBox[{{0, 0}, {3873.736418032164, 0.}}]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        LineBox[{{0, 0}, {0., 3873.736418032164}}]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        LineBox[{{0, 0}, {-3873.736418032164, 0.}}]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        LineBox[{{0, 0}, {0., -3873.736418032164}}]}}, {{
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 1, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 2, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 3, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 4, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 5, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 6, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 7, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 8, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 9, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 10, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 11, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 12, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {
        Directive[
         GrayLevel[0.5], 
         Opacity[0.4]], 
        CircleBox[{0, 0}, 13, 
         NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}}}, {}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
xdjubar9D3LWHQE=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
gTX+fql3l34BwRZjworPTeT/C1v1hxI=
         
         "]]}}}, {}, {{{}, {}, {}, {}}, {}}}, {
    PlotRange -> {{-15, 3}, {-3, 5}}, PlotRangePadding -> Scaled[0.02], 
     DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
       FormBox[
        StyleBox["\"|G/\\!\\(\\*SubscriptBox[\\(G\\), \\(e\\)]\\)|\"", 
         GrayLevel[0], Medium, StripOnInput -> False], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
         Mod[
          ArcTan[
           Part[#, 1], 
           Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
         Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
         Mod[
          ArcTan[
           Part[#, 1], 
           Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05]}, PlotLabel -> FormBox[
       StyleBox["\"Heat eq (BTCS) : Amplification Factor\"", 
        GrayLevel[0], Medium, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-15, 3}, {-3, 5}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Nu]=0.25\"", "\"\[Nu]=0.5\"", "\"\[Nu]=1\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.824014537979817*^9, 3.824014585096388*^9}, 
   3.824017062725438*^9, 3.824017565125745*^9, {3.824017599104211*^9, 
   3.824017623149542*^9}, {3.824017665763091*^9, 3.824017726627633*^9}, {
   3.824018035305971*^9, 3.8240180618449163`*^9}, 3.824018133631928*^9, {
   3.824019302476727*^9, 3.8240193186605043`*^9}, {3.824019438650943*^9, 
   3.824019446591168*^9}, {3.824019477592065*^9, 3.8240195316975813`*^9}, {
   3.824094325215863*^9, 3.8240943273295307`*^9}}]
}, Open  ]]
},
WindowSize->{1304, 704},
WindowMargins->{{-61, Automatic}, {Automatic, 11}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 3888, 87, 156, "Input"],
Cell[4471, 111, 45497, 848, 558, "Output"]
}, Open  ]],
Cell[49983, 962, 270, 4, 55, "Input"],
Cell[CellGroupData[{
Cell[50278, 970, 4124, 102, 161, "Input"],
Cell[54405, 1074, 1139, 19, 51, "Message"],
Cell[55547, 1095, 1177, 20, 24, "Message"],
Cell[56727, 1117, 1140, 19, 51, "Message"],
Cell[57870, 1138, 1175, 20, 24, "Message"],
Cell[59048, 1160, 1140, 19, 51, "Message"],
Cell[60191, 1181, 1218, 20, 24, "Message"],
Cell[61412, 1203, 1174, 20, 24, "Message"],
Cell[62589, 1225, 1222, 20, 24, "Message"],
Cell[63814, 1247, 61499, 1109, 599, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125350, 2361, 3994, 98, 156, "Input"],
Cell[129347, 2461, 65316, 1176, 427, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194700, 3642, 2506, 67, 136, "Input"],
Cell[197209, 3711, 352, 7, 51, "Message"],
Cell[197564, 3720, 351, 7, 51, "Message"],
Cell[197918, 3729, 352, 7, 51, "Message"],
Cell[198273, 3738, 430, 8, 24, "Message"],
Cell[198706, 3748, 387, 8, 24, "Message"],
Cell[199096, 3758, 52141, 936, 417, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251274, 4699, 3450, 91, 156, "Input"],
Cell[254727, 4792, 40096, 781, 301, "Output"]
}, Open  ]]
}
]
*)

